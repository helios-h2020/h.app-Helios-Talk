apply plugin: 'com.android.application'

def getStdout = { command, defaultValue ->
	def stdout = new ByteArrayOutputStream()
	try {
		exec {
			commandLine = command
			standardOutput = stdout
		}
		return stdout.toString().trim()
	} catch (Exception ignored) {
		return defaultValue
	}
}

def acraVersion = '5.7.0'

android {
	compileSdkVersion 29
	buildToolsVersion '29.0.2'

	defaultConfig {
		minSdkVersion 26
		targetSdkVersion 28
		versionCode 10207
		versionName "0.4.5"
		applicationId "eu.h2020.helios_social.helios.talk"
	}

	buildTypes {
		debug {
			applicationIdSuffix ".debug"
			shrinkResources false
			minifyEnabled true
			crunchPngs false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
			testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt', 'proguard-test.txt'
		}
		release {
			shrinkResources false
			minifyEnabled true
			crunchPngs false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
		}
	}

	flavorDimensions "version"
	productFlavors {
		screenshot {
			dimension "version"
			minSdkVersion 26
			applicationIdSuffix ".screenshot"
		}
		official {
			dimension "version"
		}
	}
	variantFilter { variant ->
		if (variant.flavors*.name.contains("screenshot") && variant.buildType.name == "release") {
			setIgnore(true)
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
}

dependencies {
	implementation "ch.acra:acra-mail:$acraVersion"
	implementation "ch.acra:acra-dialog:$acraVersion"
	implementation "ch.acra:acra-core:$acraVersion"

	implementation project(path: ':groupcommunications')
	implementation project(path: ':groupcommunications-db', configuration: 'default')
	implementation project(':helios-talk-android')

	implementation 'com.google.android.gms:play-services-location:17.1.0'
	implementation 'eu.h2020.helios_social.core.context:context:1.0.10'
	implementation 'eu.h2020.helios_social.modules.videocall:videocall:1.0.31'
	implementation 'eu.h2020.helios_social.core.messaging:messaging:1.1.6'
	implementation 'eu.h2020.helios_social.core.profile:profile:1.0.3'

	implementation 'eu.h2020.helios_social.core.context:context:1.0.10'
	implementation ('eu.h2020.helios_social.core.messagingnodejslibp2ptest:messagingnodejslibp2ptest:1.0.14')
	implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

	implementation 'com.jaredrummler:colorpicker:1.1.0'
	implementation 'androidx.preference:preference:1.1.0'
	implementation 'androidx.exifinterface:exifinterface:1.0.0'
	implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
	implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
	implementation 'com.google.android.material:material:1.1.0-beta01'
	implementation 'androidx.recyclerview:recyclerview-selection:1.1.0-rc01'

	implementation 'info.guardianproject.panic:panic:1.0'
	implementation 'info.guardianproject.trustedintents:trustedintents:0.2'
	implementation 'de.hdodenhof:circleimageview:3.0.1'
	implementation 'com.google.zxing:core:3.3.3'  // newer version need minSdk 24
	implementation 'uk.co.samuelwall:material-tap-target-prompt:3.0.0'
	implementation 'com.vanniktech:emoji-google:0.6.0'
	implementation 'com.github.kobakei:MaterialFabSpeedDial:1.2.1'
	implementation 'com.github.chrisbanes:PhotoView:2.3.0'
	def glideVersion = '4.10.0'
	implementation("com.github.bumptech.glide:glide:$glideVersion") {
		exclude group: 'com.android.support'
		exclude module: 'disklrucache' // when there's no disk cache, we can't accidentally use it
	}

	annotationProcessor 'com.google.dagger:dagger-compiler:2.24'
	annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

	compileOnly 'javax.annotation:jsr250-api:1.0'

}
